<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth">
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <!--
    <authentication mode="Forms">
      <forms loginUrl="/userProfile" />
    </authentication>-->
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <add path="*" name="ServiceStack.Factory" type="ServiceStack.HttpHandlerFactory, ServiceStack" verb="*" preCondition="integratedMode" resourceType="Unspecified" allowPathInfo="true" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <connectionStrings>
    <add name="DatabaseConnectionString" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=WebServiceDb;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--exapmle web config https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.AuthWeb.Tests/Web.config-->
    <add key="oauth.RedirectUrl" value="http://localhost:10050/" />
    <!-- Should match with OAuth2's App Callback URL -->
    <add key="oauth.CallbackUrl" value="http://localhost:10050/auth/{0}" />
    <!-- servicestack oauth config -->
    <add key="oauth.twitter.ConsumerKey" value="yqeybHSZLzNZjXXtA44XZQ" />
    <add key="oauth.twitter.ConsumerSecret" value="dPHZv3V28OtbK93FM54upAtzoEymLQMbtBqufPuL4" />
    <!--<add key="oauth.twitter.RedirectUrl" value="http://localhost:10050/home.html#/home" />
    <add key="oauth.twitter.CallbackUrl" value="http://localhost:10050/auth/twitter" />-->
    <add key="oauth.facebook.Permissions" value="email,read_stream,offline_access" />
    <add key="oauth.facebook.AppId" value="1682123258693943" />
    <!--213708032297060  // 1682123258693943-->
    <add key="oauth.facebook.AppSecret" value="9f4487dea8e5dfff8ef1f5642569e295" />
    <!--f53c6f29e7c6a4a6cb29d908d13ceb56 // 9f4487dea8e5dfff8ef1f5642569e295-->
    <!--<add key="oauth.facebook.RedirectUrl" value="http://localhost:10050/home.html#/home" />
    <add key="oauth.facebook.CallbackUrl" value="http://localhost:10050/auth/facebook" />-->
    <!-- local dev config -->
    <!-- Create Google App at: https://code.google.com/apis/console/ -->
    <add key="oauth.GoogleOAuth.ConsumerKey" value="722053963604-15ii8v67h3je65a6hvg6g0c9sve76jjn.apps.googleusercontent.com" />
    <add key="oauth.GoogleOAuth.ConsumerSecret" value="U3YZErTDsAYFztximU2RPqGF" />
    <!--<add key="oauth.GoogleOAuth.AuthorizeUrl" value="https://accounts.google.com/o/oauth2/auth?prompt=consent" />-->
    <!--<add key="oauth.GoogleOAuth.RedirectUrl" value="http://localhost:10050/home.html#/home" />-->
    <!--<add key="oauth.GoogleOAuth.CallbackUrl" value="http://localhost:10050/auth/GoogleOAuth" />-->
    <add key="oauth.LinkedIn.ConsumerKey" value="ck8n5g2fxd6o" />
    <add key="oauth.LinkedIn.ConsumerSecret" value="Mpy9Pl4uTnRrSee8" />
    <add key="oauth.LinkedIn.CallbackUrl" value="/auth/linkedin" />
    <add key="oauth.vk.ConsumerKey" value="5205626" />
    <add key="oauth.vk.ConsumerSecret" value="Vjbd20LrrW1stdaWONty" />
    <add key="oauth.vk.CallbackUrl" value="/auth/vkcom" />
    <!--Create GitHub App at: https://github.com/settings/applications/new -->
    <add key="oauth.github.Scopes" value="user" />
    <add key="oauth.github.ClientId" value="463698dd756f7a8ffeba" />
    <add key="oauth.github.ClientSecret" value="ddd9fab283d61ba476c9a6094df4c71c3550e873" />
    <!-- Create Foursquare App at: https://foursquare.com/developers/register  -->
    <add key="oauth.FourSquare.Scopes" value="basic" />
    <add key="oauth.FourSquare.ConsumerKey" value="TSDLJ5NTMREW0XJIEADD4TOF0ZRSAGY1SVFLXXKT10FQPHLQ" />
    <add key="oauth.FourSquare.ConsumerSecret" value="5O1S22BY0YVEL1X5OA0D4ZOSYC2MRYZYIHN4IZ0DOAPCT34X" />
    <!--<add key="oauth.auth0.AppId" value="VJxksG8qRBAyp6SuE58jGWAMQMYgZQca" />
    <add key="oauth.auth0.AppSecret" value="hDyXOlhDFkTo-FYT0lRAeQKvlpP3w5Ko8OzSxVmPfFxM3Qsgx3782fsDUliq56A7" />
    <add key="oauth.auth0.OAuthServerUrl" value="authhornet.eu.auth0.com" />-->
    <add key="oauth.auth0.AppId" value="VJxksG8qRBAyp6SuE58jGWAMQMYgZQca" />
    <add key="oauth.auth0.AppSecret" value="hDyXOlhDFkTo-FYT0lRAeQKvlpP3w5Ko8OzSxVmPfFxM3Qsgx3782fsDUliq56A7" />
    <add key="oauth.auth0.OAuthServerUrl" value="https://authhornet.eu.auth0.com" />
    <!--<add key="oauth.auth0.RedirectUrl" value="http://localhost:10050/home.html#/home" />-->
    <!--<add key="oauth.auth0.CallbackUrl" value="/auth/auth0" />
     <add key="oauth.auth0.RedirectUrl" value="http://localhost:10050/home.html#/home" />-->
    <add key="webPages:Enabled" value="false" />
    <add key="adminEmail" value="maksym.ovsiannikov@dev-pro.net" />
    <add key="adminLastName" value="Ovsiannikov" />
    <add key="adminName" value="Maksym" />
    <add key="adminPassword" value="Maks123$" />
    <add key="allowDomainForCORS" value="http://localhost:49258;https://www.facebook.com;https://api.twitter.com" />
    <add key="SuccessRedirectUrlFilter" value="http://localhost:10050/home.html#/home" />
  </appSettings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <runtime>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		-->
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Extensions" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.29.0" newVersion="2.2.29.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.29.0" newVersion="4.2.29.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <dotNetOpenAuth>
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
        </behaviors>
      </relyingParty>
    </openid>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
  </dotNetOpenAuth>
</configuration>